version: '3'

services:

  nginx:
    image: nginx:1.15
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - certbot-network
      - internal-network
    depends_on:
      - flask


  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - certbot-network


  flask:
    build:
      context: ./
      dockerfile: flask/dockerfile
    container_name: flask
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 --reload "src.main:app"
    volumes:
      - ./flask:/var/www
    networks:
      internal-network:
        aliases:
          - flask-app


  redis:
    container_name: redis
    image: redis:6.2.2
    command: redis-server redis-server.conf
    volumes:
      - ./redis:/data
    networks:
      - internal-network


networks:
  certbot-network:
    external: true
  internal-network:

